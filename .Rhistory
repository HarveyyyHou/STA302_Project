#| label: table-regression
#| fig-cap: Regression Results
#| echo: false
# Fit the linear model
model <- lm(OSSLT_First_Attempt_PassRate ~
School_Type +
School_Language +
Special_Ed_Pct +
Low_Income_Pct +
No_Parent_Degree_Pct,
data = df_clean)
#| include: false
#| warning: false
#| message: false
library(dplyr)
library(psych)
library(knitr)
library(kableExtra)
library(ggplot2)
library(gridExtra)
#| include: false
#| warning: false
#| message: false
data <- read.csv("/Users/zhouxuanle/Desktop/STA302 Final Submission/STA302_original_dataset.csv")
#| include: false
#| warning: false
#| message: false
df_clean <- data %>%
select(`OSSLT_First_Attempt_PassRate`,
`School.Type`,
`School.Language`,
`Percentage.of.Students.Receiving.Special.Education.Services`,
`Percentage.of.Students.Whose.Parents.Have.No.Degree..Diploma.or.Certificate`,
`Percentage.of.School.Aged.Children.Who.Live.in.Low.Income.Households`)
#| include: false
#| warning: false
#| message: false
# Remove any non-numeric characters (e.g., percentage signs, commas)
df_clean$`OSSLT_First_Attempt_PassRate` <- gsub("[^0-9.]", "", df_clean$`OSSLT_First_Attempt_PassRate`)
# Convert to numeric
df_clean$`OSSLT_First_Attempt_PassRate` <- as.numeric(df_clean$`OSSLT_First_Attempt_PassRate`)
#| include: false
#| warning: false
#| message: false
df_clean <- df_clean %>%
mutate(
`School.Type` = as.factor(`School.Type`),
`School.Language` = as.factor(`School.Language`)
)
#| include: false
#| warning: false
#| message: false
df_clean <- df_clean %>%
mutate(
`OSSLT_First_Attempt_PassRate` = as.numeric(`OSSLT_First_Attempt_PassRate`),
`Percentage.of.Students.Receiving.Special.Education.Services` = as.numeric(`Percentage.of.Students.Receiving.Special.Education.Services`),
`Percentage.of.School.Aged.Children.Who.Live.in.Low.Income.Households` = as.numeric(`Percentage.of.School.Aged.Children.Who.Live.in.Low.Income.Households`),
`Percentage.of.Students.Whose.Parents.Have.No.Degree..Diploma.or.Certificate` = as.numeric(`Percentage.of.Students.Whose.Parents.Have.No.Degree..Diploma.or.Certificate`)
)
#| include: false
#| warning: false
#| message: false
df_clean <- df_clean %>%
filter(
!is.na(`OSSLT_First_Attempt_PassRate`) &
!is.na(`Percentage.of.Students.Receiving.Special.Education.Services`) &
!is.na(`Percentage.of.School.Aged.Children.Who.Live.in.Low.Income.Households`) &
!is.na(`Percentage.of.Students.Whose.Parents.Have.No.Degree..Diploma.or.Certificate`)
)
# Rename variables in the whole data frame
df_clean <- df_clean %>%
rename(
School_Type = School.Type,
School_Language = School.Language,
Special_Ed_Pct = Percentage.of.Students.Receiving.Special.Education.Services,
Low_Income_Pct = Percentage.of.School.Aged.Children.Who.Live.in.Low.Income.Households,
No_Parent_Degree_Pct = Percentage.of.Students.Whose.Parents.Have.No.Degree..Diploma.or.Certificate
)
#| include: false
#| warning: false
#| message: false
write.csv(df_clean, "cleaned_data_school.csv", row.names = FALSE)
#| label: tbl-passrate
#| tbl-cap: "OSSLT First Attempt Pass Rate Descriptive Statistics"
#| echo: false
summary_table <- describe(df_clean %>% select(`OSSLT_First_Attempt_PassRate`)) %>%
select(-vars) %>%
mutate(across(where(is.numeric), ~ round(., 2)))
summary_table %>%
kable(
digits = 2,
align = "c",
format = "latex",
booktabs = TRUE,
caption.short = ""
) %>%
kable_styling(
latex_options = c("striped", "scale_down"),
bootstrap_options = c("striped", "hover", "condensed"),
font_size = 12
) %>%
column_spec(1, bold = TRUE, width = "5cm") %>%
column_spec(2:min(ncol(summary_table), 5), width = "2cm")
#| label: tbl-histograms
#| tbl-cap: "Histograms for Selected Predictors"
#| echo: false
# Create individual scatter plots
plot1 <- ggplot(df_clean, aes(x = School_Type)) +
geom_bar(fill = "blue") +
labs(title = "School Type Count", x = "School Type", y = "Count") +
theme_minimal() +
theme(plot.title = element_text(size = 9, face = "bold"))
plot2 <- ggplot(df_clean, aes(x = School_Language)) +
geom_bar(fill = "red") +
labs(title = "School Language Count", x = "School Language", y = "Count") +
theme_minimal()+
theme(plot.title = element_text(size = 9, face = "bold"))
# Create scatter plots for continuous variables (distribution)
plot3 <- ggplot(df_clean, aes(x = Special_Ed_Pct)) +
geom_histogram(fill = "lightgreen", bins = 30) +
labs(title = "Special Education Services", x = "Percentage", y = "Count") +
theme_minimal()+
theme(plot.title = element_text(size = 8, face = "bold"))
plot4 <- ggplot(df_clean, aes(x = Low_Income_Pct)) +
geom_histogram(fill = "purple", bins = 30) +
labs(title = "Low-Income Households", x = "Percentage", y = "Count") +
theme_minimal()+
theme(plot.title = element_text(size = 9, face = "bold"))
plot5 <- ggplot(df_clean, aes(x = No_Parent_Degree_Pct)) +
geom_histogram(fill = "orange", bins = 30) +
labs(title = "Parents Without Post-Secondary (%)", x = "Percentage", y = "Count") +
theme_minimal()+
theme(plot.title = element_text(size = 9, face = "bold"))
# Arrange plots in a 3x2 layout
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol = 3, nrow = 2)
#| label: table-regression
#| fig-cap: Regression Results
#| echo: false
# Fit the linear model
model <- lm(OSSLT_First_Attempt_PassRate ~
School_Type +
School_Language +
Special_Ed_Pct +
Low_Income_Pct +
No_Parent_Degree_Pct,
data = df_clean)
# Create a summary table
summary_df <- data.frame(
Variable = names(coef(model)),
Coefficient = coef(model),
Standard_Error = summary(model)$coefficients[, "Std. Error"],
t_Statistic = summary(model)$coefficients[, "t value"],
p_Value = summary(model)$coefficients[, "Pr(>|t|)"]
)
# Display the table
print(summary_df)
#| label: plot-residuals
#| fig-cap: Residual Plots
#| echo: false
par(mfrow = c(1, 3))  # Arrange plots in one row
# Residuals vs Fitted
plot(model$fitted.values, resid(model), main="Residuals vs Fitted",
xlab="Fitted Values", ylab="Residuals", pch=20)
abline(h=0, col="red")
# Q-Q Plot
qqnorm(resid(model), main="Q-Q Plot")
qqline(resid(model), col="red")
# Histogram of Residuals
hist(resid(model), main="Histogram of Residuals",
xlab="Residuals", col="gray", border="white")
#| label: table-regression
#| fig-cap: Regression Results
#| echo: false
# Fit the linear model
model <- lm(OSSLT_First_Attempt_PassRate ~
School_Type +
School_Language +
Special_Ed_Pct +
Low_Income_Pct +
No_Parent_Degree_Pct,
data = df_clean)
# Create a summary table
summary_df <- data.frame(
Coefficient = coef(model),
Standard_Error = summary(model)$coefficients[, "Std. Error"],
t_Statistic = summary(model)$coefficients[, "t value"],
p_Value = summary(model)$coefficients[, "Pr(>|t|)"]
)
# Display the table
print(summary_df)
